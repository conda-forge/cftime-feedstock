diff --color -Naur cftime-1.6.2.old/pyproject.toml cftime-1.6.2/pyproject.toml
--- cftime-1.6.2.old/pyproject.toml	2022-09-18 12:18:51.000000000 -0300
+++ cftime-1.6.2/pyproject.toml	2023-09-24 09:04:22.582623267 -0300
@@ -1,3 +1,3 @@
 [build-system]
-requires = ["setuptools>=41.2", "cython", "wheel", "oldest-supported-numpy"]
+requires = ["setuptools>=41.2", "cython>=0.29.20", "wheel", "oldest-supported-numpy"]
 build-backend = "setuptools.build_meta"
diff --color -Naur cftime-1.6.2.old/setup.py cftime-1.6.2/setup.py
--- cftime-1.6.2.old/setup.py	2022-09-18 12:18:51.000000000 -0300
+++ cftime-1.6.2/setup.py	2023-09-24 09:02:55.841012556 -0300
@@ -16,7 +16,14 @@
 BASEDIR = os.path.abspath(os.path.dirname(__file__))
 SRCDIR = os.path.join(BASEDIR,'src')
 CMDS_NOCYTHONIZE = ['clean','clean_cython','sdist']
-COMPILER_DIRECTIVES = {}
+COMPILER_DIRECTIVES = {
+    # Cython 3.0.0 changes the default of the c_api_binop_methods directive to
+    # False, resulting in errors in datetime and timedelta arithmetic:
+    # https://github.com/Unidata/cftime/issues/271.  We explicitly set it to
+    # True to retain Cython 0.x behavior for future Cython versions.  This
+    # directive was added in Cython version 0.29.20.
+    "c_api_binop_methods": True
+}
 DEFINE_MACROS = [("NPY_NO_DEPRECATED_API", "NPY_1_7_API_VERSION")] 
 FLAG_COVERAGE = '--cython-coverage'  # custom flag enabling Cython line tracing
 NAME = 'cftime'
